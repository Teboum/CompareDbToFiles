const mongoose = require("mongoose");

const DB_URL =
  "mongodb://eboum:MNHgTYhdVMpJxUdg@cluster0-shard-00-00.yhzlv.mongodb.net:27017,cluster0-shard-00-01.yhzlv.mongodb.net:27017,cluster0-shard-00-02.yhzlv.mongodb.net:27017/Individus?ssl=true&replicaSet=atlas-pfimok-shard-0&authSource=admin&retryWrites=true&w=majority";

foyersSchema = mongoose.Schema({
  coordonnees: {
    codePostal: String,
    complementAdresse: String,
    digicode: String,
    email: String,
    emailResponsableMineur: String,
    rue: String,
    telephoneFoyer: String,
    telephonePortable: String,
    telephoneTravail: String,
    ville: String,
  },
  device: [
    {
      type: new mongoose.Schema({
        browser: [
          {
            type: new mongoose.Schema({
              idBrowser: Number,
              name: Number,
              infoMeter: Boolean,
              installationMeter: Number,
            }),
          },
        ],
        detail: String,
        idIndividu: Number,
        identifiant: Number,
        localisation: Number,
        marque: Number,
        parametre: Number,
        systemExploitation: Number,
        typeConnexion: Number,
        typeDevice: Number,
        utilisation: Number,
      }),
    },
  ],
  disponibilites: String,
  foyerEquipement: {
    type: new mongoose.Schema({
      abonnementTvAutreOperateur: Number,
      abonnementTvCanalPlus: Number,
      abonnementTvCanalSat: Number,
      abonnementTvNumericable: Number,
      accesInternet: Number,
      accesInternetLePlusRapide: Number,
      appareilPhotoNumerique: Number,
      appareilsPhoto: Boolean,
      autreModeleConsole: Boolean,
      beinSportADate: Number,
      box: Number,
      camescopes: Boolean,
      canalDigital: Number,
      canalPlusThematique: Number,
      chaineCanalCinemaSeries: Number,
      chaineCanalFamily: Number,
      chaineCanalPremium: Number,
      chaineCanalSport: Number,
      chat: Number,
      chien: Number,
      congelateurs: Number,
      connexionTelephonique: Number,
      consoTeleCable: Number,
      consoleConnecteeInternet: Boolean,
      consolesJeuxVideos: Number,
      dateDebutPromoCanalPlus: Date,
      dateFinPromoCanalPlus: Date,
      demenagement: Number,
      dvdPortable: Number,
      equipPs: Number,
      equipWii: Number,
      equipXbox: Number,
      equipeFilaire: Number,
      equipeMobile: Number,
      fai: Number,
      jeuxVideoPortables: Number,
      laveVaisselle: Number,
      lectTeleCableHebdo: Number,
      ligneFixe: Number,
      microOnde: Number,
      modeReceptionTvAdsl: Number,
      modeReceptionTvAucun: Number,
      modeReceptionTvCable: Number,
      modeReceptionTvNsp: Number,
      modeReceptionTvSat: Number,
      modeReceptionTvTrad: Number,
      nbPcFoyer: Number,
      nbTv: Number,
      nbVoiture: Number,
      nbrTvUtiliseesUneFoisParMois: Number,
      ordinateur: Number,
      origineRecueil: Number,
      possedeJardin: Boolean,
      ps3: Boolean,
      ps4: Boolean,
      raisonAbonnement: Number,
      raisonCanalCine: Number,
      raisonCanalSeries: Number,
      raisonCanalSport: Number,
      residenceSecondaire: Boolean,
      revenus: Number,
      routeurMmat: Boolean,
      setTopBox: Number,
      smartTv: Number,
      smartphone: Number,
      statutOccupation: Number,
      svod: Number,
      switch: Boolean,
      tablette: Number,
      tvResidenceSecondaire: Number,
      typeConnexionInternet: Number,
      typeHabitation: Number,
      vaHa2Der: Number,
      vaHa2Prev: Number,
      vehiculeAchat5a8ans: Number,
      vehiculeAchat9ansEtPlus: Number,
      wii: Boolean,
      wiiU: Boolean,
      xBox360: Boolean,
      xBoxOne: Boolean,
      nbPieces: Number,
      boitierIptv: Number,
      barreSon: Number,
      enceinteTV: Number,
      homeCine: Number,
      nonEquipeTv: Boolean,
      nbTvTotal: Number,
      propalTVSeg: Number,
      tvSegOK: Number,
      smartTv2P1: Number,
      smartTv2P2: Number,
      smartTv2P3: Number,
      smartTv2P4: Number,
      smartTvP1: Number,
      smartTvP2: Number,
      smartTvP3: Number,
      smartTvP4: Number,
      nbSetMeter: Number,
    }),
  },
  idFoyer: Number,
  individu: [
    {
      type: new mongoose.Schema({
        audience: {
          type: new mongoose.Schema({
            dateEntree: Date,
            frequenceConnexionWeb: Number,
            frequenceEcouteAuCasque: Number,
            grosConsommateur: Boolean,
            lettreTelecommande: String,
            membreFoyer: Number,
            nbJoursPresenceParMois: Number,
            presencePermanente: Boolean,
          }),
        },
        experiencePro: {
          type: new mongoose.Schema({
            achatPosteSq1: Number,
            achatPosteSq2: Number,
            achatPosteSq3: Number,
            achatPosteSq4: Number,
            achatPosteSq5: Number,
            achatPosteSq6: Number,
            achatPosteSq7: Number,
            achatPosteSq8: Number,
            activiteActuelle: Number,
            autreActivite: String,
            cadreDirigeant: Number,
            chiffreAffaireEntreprise: Number,
            csp4: Number,
            csp42: Number,
            dernierTypeEmploi: Number,
            domaineActivite: String,
            heuresTravailles: Number,
            montantAchatSq1: Number,
            montantAchatSq2: Number,
            montantAchatSq3: Number,
            montantAchatSq4: Number,
            nbSalarie: Number,
            nbSalaries: Number,
            nouvelleCsp42: Number,
            nouvelleProfession: String,
            priseDecisionAchats: Number,
            profession: String,
            revenus: Number,
            sectActiviteIndustriel: Number,
            sectActiviteService: Number,
            secteurActivite: Number,
            statutGrade: Number,
            tempsPlein: Boolean,
            typeEmploi: Number,
            chiffreAffairesCarthegie: Number,
            codeApeCarthegie: String,
            effectifsEntrepriseCarthegie: Number,
            nbSalariesPourGerants: Number,
            numSiretCarthegie: String,
            typeChomeur: Number,
            typeProfesseurs: Number,
            typeSalarieReceuil: Number,
            teletravail: Number,
          }),
        },
        habitudes: {
          type: new mongoose.Schema({
            abo6dmNetflix: Number,
            aboA6dmBeinSport: Number,
            aboActuelBeinSport: Number,
            aboActuelNetflix: Number,
            achatVoyages: Number,
            amazonVideo: Number,
            appleTvPlus: Number,
            assuranceVie: Boolean,
            canalPlayCanalSeries: Number,
            castTv12DerniersMois: Number,
            castTvAirplay: Number,
            castTvAutreEquipement: Number,
            castTvAutreMoyen: Number,
            castTvChrome: Number,
            catchUpTv: Number,
            cine30dj: Number,
            cinema: Number,
            comportAchat: Number,
            conducteurPrincipal: Number,
            connexionInternet: Boolean,
            consoleJeuVideo: Boolean,
            creditEnCours: Number,
            creditFutur: Number,
            creditPasse: Number,
            derConnectNet: Number,
            disneyPlus: Number,
            ecouteCasqueRadioSemaine: Number,
            ecouteCasqueRadioWeekend: Number,
            ecouteCasqueTelevisionDomicile: Number,
            ecouteCasqueTelevisionHorsDomicile: Number,
            fanDeMode: Number,
            fanDeSport: Number,
            fdjGrattage: Number,
            fdjPariSportif: Number,
            fdjTirage: Number,
            filmoTv: Number,
            francaiseJeux: Number,
            freqCastTv: Number,
            freqCatchUpTv: Number,
            freqConsoCupMob: Number,
            freqConsoCupPc: Number,
            freqConsoCupTabl: Number,
            freqConsoGrattageFdj: Number,
            freqConsoJeuxTirageFdj: Number,
            freqConsoLiveMob: Number,
            freqConsoLivePc: Number,
            freqConsoLiveTabl: Number,
            freqConsoLiveTvSurTv: Number,
            freqMobile: Number,
            freqReso: Number,
            freqTablette: Number,
            freqUtilFacebook: Number,
            freqUtilPcDom: Number,
            freqUtilSvod: Number,
            freqUtilTwitter: Number,
            frequenceVideoInternet: Number,
            frequentationCinema: Number,
            gullimax: Number,
            hbomax: Number,
            implicationDansAchatsFoyer: Number,
            jamaisDeParisSportifs: Number,
            jeuVideoDom: Number,
            motifProxZone1: Number,
            motifProxZone2: Number,
            motifProxZone3: Number,
            motifProxZone4: Number,
            motifProxZone5: Number,
            motifProxZone6: Number,
            motifProxZone7: Number,
            motifProxZone8: Number,
            motifProxZone9: Number,
            nbMobile: Number,
            netflix: Number,
            newTechnoInfo: Number,
            newTechnoPoss: Number,
            nomProxZoneAfriqueNoire: Number,
            nomProxZoneAfriqueNord: Number,
            nomProxZoneAmeriqueNord: Number,
            nomProxZoneAmeriqueSud: Number,
            nomProxZoneAsie: Number,
            nomProxZoneDomTom: Number,
            nomProxZoneEurope: Number,
            nomProxZoneMoyenOrient: Number,
            nomProxZoneOceanie: Number,
            ocsGo: Number,
            origineRecueil: Number,
            parisSportifsInternet: Number,
            parisSportifsPointVente: Number,
            passkidsSfr: Number,
            peacock: Number,
            placementFinanciers: Number,
            profilingVideoOrdi: Number,
            profilingVideoTablette: Number,
            profilingVideoTelMobile: Number,
            profilingVideoTv: Number,
            responsableAchats: Number,
            salto: Number,
            secondEcran: Number,
            sfrPlay: Number,
            smartphone: Number,
            socialTV: Number,
            socialTV30DJ: Number,
            socialTVCom12DM: Number,
            socialTVCom30DJ: Number,
            souscriptionAssurances: Number,
            svodAutre: Number,
            telephonePortable: Number,
            tfoumax: Number,
            utildeviceOrdi: Number,
            utildeviceSmartphone: Number,
            utildeviceTablette: Number,
            utilisInternetAutre: Number,
            utilisInternetDom: Number,
            utilisInternetMobile: Number,
            utilisInternetOrdi: Number,
            utilisInternetTablette: Number,
            utilisInternetTrav: Number,
            utilisationPc: Boolean,
            vod: Number,
            webUsage: Number,
            autreAbonnementSport: Number,
            beinSport: Number,
            canalPlusSport: Number,
            dazn: Number,
            eurosport: Number,
            multisportCanalPlus: Number,
            rmcSport: Number,
            typeEcouteCasqueRadio: Number,
            typeEcouteCasqueTv: Number,
            notorieteStationAfricaRadio: Number,
            notorieteStationBeurFm: Number,
            notorieteStationBfmBusiness: Number,
            notorieteStationChanteFrance: Number,
            notorieteStationCherieFm: Number,
            notorieteStationEvasion: Number,
            notorieteStationFip: Number,
            notorieteStationFunRadio: Number,
            notorieteStationGenerations: Number,
            notorieteStationIndes: Number,
            notorieteStationLatina: Number,
            notorieteStationLovely: Number,
            notorieteStationMRadio: Number,
            notorieteStationMbs: Number,
            notorieteStationNostalgie: Number,
            notorieteStationNrj: Number,
            notorieteStationOuiFm: Number,
            notorieteStationRadioFj: Number,
            notorieteStationRadioNova: Number,
            notorieteStationRadioOrient: Number,
            notorieteStationRfm: Number,
            notorieteStationRireEtChansons: Number,
            notorieteStationRtl2: Number,
            notorieteStationSudRadio: Number,
            notorieteStationSwigg: Number,
            notorieteStationTropiquesFm: Number,
            notorieteStationTsfJazz: Number,
            notorieteStationUrbanHit: Number,
            notorieteStationVirginRadio: Number,
            notorieteStationVoltage: Number,
            radioCasque: Number,
            freqPresseQuotidienneRegionale: Number,
            freqSecondEcran: Number,
            myCanal: Number,
            passLigueAmazon: Number,
            pontAssociatif: Number,
            pontCompositionProduit: Number,
            pontCulture: Number,
            pontEcoresponsable: Number,
            pontFamille: Number,
            pontJeuxVideo: Number,
            pontNouveaute: Number,
            pontProduitAllege: Number,
            pontProduitBio: Number,
            pontProduitFrancais: Number,
            pontPromoInternet: Number,
            pontRecyclage: Number,
            pontSolitude: Number,
            pontSortie: Number,
            pontSport: Number,
            pontTVMusique: Number,
            pontTendanceMode: Number,
          }),
        },

        idIndividu: Number,
        idIndividuMediametrie: Number,
        infoPerso: {
          type: new mongoose.Schema({
            dateNaissance: Date,
            email: String,
            lienParente: Number,
            lienParenteAutre: String,
            lienParenteStat: Number,
            nom: String,
            nouvellePersonneDeRef: Number,
            personneDeRef: Number,
            prenom: String,
            sexe: Number,
            telephonePortable: String,
            lienPdr: Number,
          }),
        },
        numeroCati: Number,
        proprietes: {
          type: new mongoose.Schema({
            anonymizationDate: Date,
            anonymized: Boolean,
            dateArret: Date,
            prepareAnonymizationDate: Date,
            reasonAnonymization: String,
            toAnonymize: Boolean,
          }),
        },
        scolarite: {
          type: new mongoose.Schema({
            dernierDiplomeObtenu: String,
            niveauEtude: Number,
            ageFinEtude: Number,
            niveauDiplome: Number,
          }),
        },
        statut: {
          type: new mongoose.Schema({
            statutTemporaire: Number,
            idStatut: Number,
            statutTemporaireDateFin: Date,
            reason: Number,
            statutTemporaireDateDebut: Date,
          }),
        },
        lastModifiedDate: Date,
        dateDerniereModification: Date,
        uuid: String,
      }),
    },
  ],
  infosFamille: {
    type: new mongoose.Schema({
      petitEnfantAge0a3ans: Number,
      petitEnfantAge11a14ans: Number,
      petitEnfantAge15a17ans: Number,
      petitEnfantAge18a25ans: Number,
      petitEnfantAge26ansEtPlus: Number,
      petitEnfantAge4a10ans: Number,
    }),
  },
  noFoyerMediametrie: Number,
  operateur: String,
  peripheriques: [
    {
      type: new mongoose.Schema({
        typeDevice: Number,
        identifiant: Number,
        utilisateurPrincipal: Number,
        marque: Number,
        modele: Number,
        os: Number,
        usagePrincipal: Number,
        accesInternet: Number,
        utilisateurs: [
          {
            type: new mongoose.Schema({
              idMembre: Number,
              utilise: Number,
            }),
          },
        ],
        typeConnexion: Number,
        numero: String,
        operateur: Number,
        compatible: Number,
        typeIdentification: Number,
        lieu: Number,
        utilisateur: Number,
        utiliseAuMoinsUneFoisParMois: Number,
        type: Number,
        systemeExploitationWindows: Number,
        lastModifiedDate: Date,
        dateDerniereModification: Date,
        uuid: String,
      }),
    },
  ],
  poste: [
    {
      type: new mongoose.Schema({
        audienceHd: Boolean,
        audimetre: {
          type: new mongoose.Schema({
            antenneGsmDeportee: Boolean,
            qualiteSignal: Number,
            priseSon: Number,
            detailPriseSon: String,
            idTypeModem: Number,
            convertisseurCia: Boolean,
            idAudimetre: Number,
            rssi: String,
            emplacementAutre: String,
            lastModifiedDate: Date,
            dateDerniereModification: Date,
            uuid: String,
          }),
        },
        autreUsage: Boolean,
        dateAutreUsage: Date,
        dateHorsTension: Date,
        decodeurs: [
          {
            type: new mongoose.Schema({
              idTypeConnectique: Number,
              disqueDur: Boolean,
              accesInternet: Boolean,
              idTypeDecodeur: Number,
              antenneInt: Boolean,
              idFournisseur: Number,
              capaciteHd: Boolean,
              idReceptionMode: Number,
              abonnements: [
                {
                  type: new mongoose.Schema({
                    idAbonnement: Number,
                  }),
                },
              ],
            }),
          },
        ],
        equipement: {
          type: new mongoose.Schema({
            aTransferer: Number,
            adaptateurCplWifi: Boolean,
            camescope: Boolean,
            canalPlusMag: Number,
            combineDvdMag: Boolean,
            consoleConnecteeInternet: Boolean,
            dateAchat: Date,
            disqueDurExterne: Boolean,
            disqueDurIntegre: Boolean,
            dvdEnregistreur: Boolean,
            dvdEnregistreurDD: Boolean,
            equipeDvd: Boolean,
            equipeMagnetoscope: Boolean,
            hdBluRay: Boolean,
            idMagnetoscope: Number,
            idMarqueMagnetoscope: Number,
            idMarqueModeleConsole: Number,
            jeuxVideoBranche: Number,
            lecteurCdvDvdBranche: Number,
            lecteurDvdHD: Boolean,
            lecteurDvdIntegre: Boolean,
            lecteurDvdTnt: Boolean,
            modeleMagnetoscope: String,
            ordinateur: Boolean,
            peritelTvMag: Number,
            posteEmetteurAssocie: Number,
            recepteurWifi: Boolean,
            revolutionTv: Number,
            telecommandeMag: Number,
            telephonieAdsl: Boolean,
            transmetteurVideo: Boolean,
            typeTransmetteur: Number,
            vhs: Number,
          }),
        },
        horsTension: Boolean,
        idLocalisationPoste: Number,
        idPoste: Number,
        lastConnect: Date,
        numPoste: Number,
        postePrincipal: Boolean,
        television: {
          type: new mongoose.Schema({
            connectableInternet: Boolean,
            modele: String,
            tvHd: Boolean,
            idTelevision: Number,
            equipeEcran3D: Boolean,
            dateMiseEnService: Number,
            seizeNeuvieme: Boolean,
            idMarqueTelevisionMag: Number,
            videoProjecteur: Boolean,
            disqueDurIntegre: Boolean,
            typeEcran: Number,
            nbrePeritelTv: Number,
            portUSB: Boolean,
            tntIntegre: Boolean,
            homeCinema: Boolean,
            combiTVDvd: Boolean,
            idFrequenceUtilisation: Number,
            combineTelevision: Number,
            connecteInternet: Boolean,
            ecranPlat: Boolean,
            videoRetroProjecteur: Boolean,
          }),
        },
        lastModifiedDate: Date,
        dateDerniereModification: Date,
        uuid: String,
      }),
    },
  ],
  proprietes: {
    type: new mongoose.Schema({
      anonymizationDate: Date,
      anonymized: Boolean,
      conventionNGE: Boolean,
      dateArret: Date,
      dateCati1: Date,
      dateCati2: Date,
      dateChuteTmp: Date,
      dateCreation: Date,
      dateDescente: Date,
      dateEntreeFoyer: Date,
      dateEnvoiInitial: Date,
      dateIntegration: Date,
      datePremiereCollecte: Date,
      dateRaisonExcCati: Date,
      dateRecensement: Date,
      dateRecensementFilEau: Date,
      dateReceptionConventionMeter: Date,
      dateReceptionConventionNGE: Date,
      idEtude: Number,
      nbrBeaconMaison: Number,
      nbrBeaconVoiture: Number,
      prepareAnonymizationDate: Date,
      raisonExcCati: Array,
      reasonAnonymization: String,
      toAnonymize: Boolean,
      dateConvention: Date,
    }),
  },
  statut: {
    type: new mongoose.Schema({
      chuteManual: Boolean,
      chuteTmp: Boolean,
      chuteTmpManual: Boolean,
      dateArret: Date,
      dateDebutStatutTemporaire: Date,
      dateFinStatutTemporaire: Date,
      dateSuspension: Date,
      forceDRO: Boolean,
      horsFrance: Boolean,
      idMotifSuspension: Number,
      idStatut: Number,
      motifChute: Number,
      motifChuteTmp: Number,
      precisionMotifChute: String,
      precisionMotifChuteTmp: String,
      rappelRetour: Boolean,
      type: Number,
      dateBasculePilote: Date,
    }),
  },
  typePanels: Array,
  lastModifiedDate: Date,
  dateDerniereModification: Date,
  uuid: String,
  propositionSetMeter: Number,
});

const Foyers = mongoose.model("foyer", foyersSchema);

const dateParser = (date) => {
  date = "" + date;
  date = date.slice(4, 15);
  const months = {
    Jan: "01",
    Feb: "02",
    Mar: "03",
    Apr: "04",
    May: "05",
    Jun: "06",
    Jul: "07",
    Aug: "08",
    Sep: "09",
    Oct: "10",
    Nov: "11",
    Dec: "12",
  };
  date = date.replace(date.slice(0, 3), months[date.slice(0, 3)]);
  date = date.slice(3, 5) + "-" + date.slice(0, 2) + "-" + date.slice(6, 10);
  return date;
};

exports.getInfoIndividu = () => {
  return new Promise((resolve, reject) => {
    mongoose
      .connect(DB_URL, {
        useNewUrlParser: true,
        useUnifiedTopology: true,
      })
      .then(() =>
        Foyers.find(
          {},
          {
            _id: false,
            idFoyer: true,
            "individu.audience.dateEntree": true,
            "individu.idIndividu": true,
            "individu.infoPerso.dateNaissance": true,
          }
        )
      )
      .then((foyer) => {
        mongoose.disconnect();
        var response = [];
        foyer.forEach((e, i) => {
          e.individu.forEach((elem, index) => {
            var dateEntree = elem.audience.dateEntree;
            var dateNaissance = elem.infoPerso.dateNaissance;

            if (dateEntree.getHours() >= 22) {
              dateEntree.setDate(dateEntree.getDate() + 1);
            }
            if (dateNaissance.getHours() >= 22) {
              dateNaissance.setDate(dateNaissance.getDate() + 1);
            }

            console.log(dateParser(dateEntree));

            response.push({
              idFoyer: e.idFoyer,
              idIndividu: elem.idIndividu,
              dateEntreeDB: dateParser(dateEntree), //day + "-" + month + "-" + year,
              dateNaissanceDB: dateParser(dateNaissance), // day2 + "-" + month2 + "-" + year2,
            });
          });
        });

        resolve(response);
      })
      .catch((err) => {
        mongoose.disconnect();
        reject(err);
      });
  });
};
